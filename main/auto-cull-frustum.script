
-- Automatically adjust the culling frustum to work with the world curvature.

local curveworld = require "curveworld.curveworld"
local draw = require "debug-draw"

go.property("camera", msg.url())
go.property("is_enabled", true)

local function get(self, prop)
	return go.get(self.camera, prop)
end

local function get_aspect()
	local w, h = window.get_size()
	return w/h
end

function init(self)
	msg.post(".", "acquire_input_focus")
	self.is_enabled = true
	print("Auto-Culling "..(self.is_enabled and "Enabled" or "Disabled"))
end

function update(self, dt)
	if self.is_enabled then
		local fov, near, far = get(self, "fov"), get(self, "near_z"), get(self, "far_z")
		local aspect = get_aspect()
		local proj = curveworld.get_persp_cull_proj(fov, aspect, near, far)
		curveworld.set_cull_proj(proj)
	end
	local win_w, win_h = window.get_size()
	draw.text("Frustum Culling: "..(curveworld.get_culling_enabled() and "Enabled" or "Disabled"), 5, win_h - 5)
	draw.text("Frustum: "..(self.is_enabled and "Auto" or "Camera"), 5, win_h - 20)
end

function on_input(self, action_id, action)
	if action.pressed then
		if action_id == hash("switch culling") then
			self.is_enabled = not self.is_enabled
			print("Auto-Culling "..(self.is_enabled and "Enabled" or "Disabled"))
			if not self.is_enabled then
				curveworld.set_cull_proj(nil)
			end
		elseif action_id == hash("toggle culling") then
			curveworld.set_culling_enabled(not curveworld.get_culling_enabled())
		end
	end
end
